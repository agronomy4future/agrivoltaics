% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/agrivoltaics.R
\name{agrivoltaics}
\alias{agrivoltaics}
\title{Fit Mixed-Effects Models for Agrivoltaic Experiments}
\usage{
agrivoltaics(
  output,
  treatment = NULL,
  genotype = NULL,
  plot = NULL,
  block = NULL,
  row = NULL,
  season = NULL,
  location = NULL,
  data
)
}
\arguments{
\item{output}{The response variable (e.g., yield, biomass). \strong{Required}.}

\item{treatment}{The main treatment factor (e.g., shading treatment). \strong{Required}.}

\item{genotype}{(Optional) Genotype or variety factor.}

\item{plot}{(Optional) Plot identifier (random effect if present).}

\item{block}{Experimental block factor (random effect). \strong{Required}.}

\item{row}{(Optional) Row factor, can generate treatment:row interactions.}

\item{season}{(Optional) Season or year factor, can generate repeated-measures structures.}

\item{location}{(Optional) Location factor (e.g., site or farm).}

\item{data}{A \code{data.frame} containing all specified variables.}
}
\value{
A fitted \code{lmer} model object (from \pkg{lme4}), returned invisibly.
}
\description{
In agrivoltaics studies, randomization between the solar panel treatment and the control is often not feasible because of
the fixed layout and structural constraints of the panels in the field. As a result, the assumptions underlying standard
ANOVA or a split-plot design—particularly the requirement for random assignment of treatments—are violated.
\code{agrivoltaics()} function streamlines the analysis of agrivoltaic experiments by automatically building and fitting
linear mixed-effects models using \code{lme4::lmer()}.It handles the specification of fixed and random effects, generates biologically
meaningful interaction terms, and produces variance component breakdowns and Type III ANOVA tables for interpretation of treatment
effects.
}
\details{
This function:
\itemize{
\item Builds a fixed-effects model formula including treatments and optional
factors (genotype, row, season, location) with biologically meaningful interactions.
\item Adds random effects for block, plot, and block:season if repeated measures exist.
\item Fits the model using \code{lmer()}.
\item Prints variance components and their percentages, as well as a Type III ANOVA table.
}
}
\examples{
#upload required package
if(!require(remotes)) install.packages("remotes")
if (!requireNamespace("agrivoltaics", quietly = TRUE)) {
remotes::install_github("agronomy4future/agrivoltaics", force= TRUE)
}
library(remotes)
library(agrivoltaics)

# data (example) upload
if(!require(readr)) install.packages("readr")
library(readr)
github="https://raw.githubusercontent.com/agronomy4future/raw_data_practice/refs/heads/main/agrivoltaics.csv"
df= data.frame(read_csv(url(github), show_col_types=FALSE))
set.seed(100)
print(df[sample(nrow(df),5),])

Season      Location AV_Site Genotype Plot Block Row  Yield
2015 season East     AV      cv1      101  I     East 195.38
2016 season MidWest  Control cv1      115  IV    East 625.07
2015 season East     AV      cv2      102  II    East 135.86
2015 season MidWest  Control cv1      109  I     West 384.36
2016 season East     AV      cv1      107  III   East 125.11
.
.
.

■ Code source: https://github.com/agronomy4future/agrivoltaics

\dontrun{

df$Plot= as.factor(df$Plot)
df$Yield= as.numeric (df$Yield)

model= agrivoltaics(
  output= Yield,
  treatment= AV_Site,
  genotype= Genotype (or NULL),
  plot= Plot (or NULL),
  block= Block,
  row= Row (or NULL),
  season= Season (or NULL),
  location= Location (or NULL),
  data= df
)

### pairwise mean comparison (LSD: adjust= "none", Tukey: adjust= "sidak")
    pairwise= contrast(emmeans(model, ~ variable), method= "pairwise", adjust= "sidak")
    print(summary(pairwise))

### Post-hoc analysis (LSD: adjust= "none", Tukey: adjust= "sidak")
    post_hoc= cld (emmeans(model, ~ variable), adjust= "sidak", Letters=letters, reverse = TRUE)
    print(post_hoc)


### Practice ###
model= agrivoltaics(
 output= Yield,
 treatment= AV_Site,
 genotype= Genotype,
 plot= NULL,
 block= Block,
 row= Row,
 season= NULL,
 location= NULL,
 data= df
)

post_hoc= cld (emmeans(model, ~ AV_Site:Row), adjust= "sidak", Letters=letters, reverse = TRUE)
print(post_hoc)

AV_Site Row    emmean SE   df   lower.CL upper.CL .group
Control East   524    11.2 23.4 491.5    556       a
Control West   471    11.1 22.9 438.7    503        b
Control Middle 385    14.9 66.2 344.7    426         c
AV      Middle 184    14.9 66.2 143.2    224          d
AV      East   157    11.1 22.9 125.5    189          de
AV      West   131    11.1 22.9 99.4     163          e


}
}
